
type Mutation {
  addMenuItem(
    restaurantId: ObjectId!, 
    categoryName: CategoryName!,
    name: String!,
    description: String,
    price: Float!,
    vegetarian: Boolean!
    ): MenuItem!

  removeMenuItem(
    restaurantId: ObjectId!,
    categoryName: CategoryName!,
    itemId: ObjectId!
  ): Boolean!

  updateMenuItem(
    restaurantId: ObjectId!,
    itemId: ObjectId!,
    categoryName: CategoryName,
    name: String,
    description: String,
    price: Float,
    vegetarian: Boolean
  ): MenuItem!
}

type Query {
    getMenu(restaurantId: ObjectId!): [MenuCategory!]! @public 
    getAllRestaurants: [RestaurantDto!]! @public
    getAvailableSittings(restaurantId: ObjectId!, partySize: Int!): [DateTime!]! @public
}

type RestaurantDto {
  _id: ObjectId!,
  name: String,
}

type Restaurant {
  _id: ObjectId!
  name: String!
  openingDays: [WeekDays!]!
  sittings: [Sitting!]!
  menu: [MenuCategory!]!
}

enum WeekDays {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

type Sitting {
  startTime: String!
  durationMinutes: Int!
}

type MenuCategory {
  category: String!
  items: [MenuItem!]!
}

type MenuItem {
  _id: ObjectId!
  name: String!
  description: String
  price: Int!
  vegetarian: Boolean!
}

enum CategoryName {
  BREAKFAST
  LUNCH
  DINNER
  APPETIZERS
  DESSERTS
  DRINKS
}